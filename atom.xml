<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Carlos Cuba]]></title>
  <link href="http://carloscuba.com.pe/atom.xml" rel="self"/>
  <link href="http://carloscuba.com.pe/"/>
  <updated>2013-07-13T17:09:01-05:00</updated>
  <id>http://carloscuba.com.pe/</id>
  <author>
    <name><![CDATA[Carlos Cuba]]></name>
    <email><![CDATA[ce.cuba@icloud.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Menú Lateral sólo con CSS]]></title>
    <link href="http://carloscuba.com.pe/blog/2013/07/menu-lateral-css/"/>
    <updated>2013-07-13T14:14:00-05:00</updated>
    <id>http://carloscuba.com.pe/blog/2013/07/menu-lateral-css</id>
    <content type="html"><![CDATA[<p>Un menú lateral, una barra de navegación, una forma sencilla de organizar el contenido de nuestra web y por sobre todo un aspecto muy importante del diseño de la misma. ¿Se puede hacer de manera sencilla? Por supuesto! … Aquí se los muestro.</p>

<iframe 
    class="centeredIframe"
    height="270px" 
    width="280px" 
    frameborder="0" 
    scrolling="no" 
    src="http://carloscuba.com.pe/assets/menu_lateral_css.html">
 </iframe>




<!-- more -->


<p>Para empezar, tenemos nuestra estructura básica html:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>  &lt;ul&gt;
</span><span class='line'>    &lt;li&gt;Inicio&lt;/li&gt;
</span><span class='line'>    &lt;li&gt;Noticias&lt;/li&gt;
</span><span class='line'>    &lt;li&gt;Videos&lt;/li&gt;
</span><span class='line'>    &lt;li&gt;Contacto&lt;/li&gt;
</span><span class='line'>  &lt;/ul&gt;
</span></code></pre></td></tr></table></div></figure>


<p>En nuestra hoja de estilos, empezaremos añadiento las propiedades para la lista (<code>&lt;ul&gt;</code>):</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>  ul {
</span><span class='line'>    list-style: none;
</span><span class='line'>    margin: 0;
</span><span class='line'>    padding: 0;
</span><span class='line'>    width: 15em;
</span><span class='line'>  }</span></code></pre></td></tr></table></div></figure>


<p>Con esto nos aseguramos de deshacernos de las viñetas que aparecen automáticament en cada entrada (<code>&lt;li&gt;</code>) de nuestra lista, establecemos las propiedades <code>margin</code> y <code>padding</code> en 0 (para luego poder trabajar más a detalle en ellas), y definimos el ancho (<code>width</code>) en 15em (si desean aprender un poco más sobre las <strong>unidades em</strong>, aquí les dejo un <strong><em><a href="http://www.impressivewebs.com/understanding-em-units-css/">link</a></em></strong> bastante interesante).</p>

<p>Luego empezamos a darle el aspecto deseado a nuestro menú, pero debemos tener muy en cuenta que vamos a modificar el aspecto de <strong>cada entrada de nuestra lista</strong>, así que tenemos que utilizar los selectores correspondientes (<code>ul &gt; li</code> &ndash; <em>con lo que dejamos bien en claro que los elementos afectados serán todos aquellos identificados con la etiqueta <code>&lt;li&gt;</code> que se encuentren dentro de un segmento delimitado por etiquetas <code>&lt;ul&gt;&lt;/ul&gt;</code></em>).</p>

<p>Como primer paso, definiremos las siguientes propiedades básicas:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>  ul &gt; li { 
</span><span class='line'>    background-color: rgb(69,72,77);    
</span><span class='line'>    color: rgba(255, 255, 255, 0.9);
</span><span class='line'>    font-size: 1.3em;
</span><span class='line'>    height: 3em;
</span><span class='line'>    line-height: 2.8em;
</span><span class='line'>    padding-left: 1em;
</span><span class='line'>  }</span></code></pre></td></tr></table></div></figure>


<p>Hasta aquí tenemos simplemente una serie de palabras con fondo oscuro y algo de espaciado interlineal que no hacen que imaginemos que se trata de un menú, ¿verdad?. Pues cuando diseñamos, uno de los aspectos más importante es <strong>pensar como el usuario</strong> -que si bien es cierto no es una tarea fácil, nos va a ayudar muchísimo al momento de tratar de lograr diseños intuitivos-; por lo que a continuación, le daremos a nuestro menú un aspecto más cercano a lo que queremos que el usuario piense cuando lo vea. Dentro del mismo selector mencionado anteriormente, colocaremos las siguientes propiedades:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>  ul &gt; li {
</span><span class='line'>    
</span><span class='line'>    ...
</span><span class='line'>    
</span><span class='line'>    cursor: pointer;          
</span><span class='line'>    box-shadow: inset 0px 1px 2px rgba(255,255,255,0.2);
</span><span class='line'>    text-shadow: 1px 1px 4px rgba(black,0.3);
</span><span class='line'>  }</span></code></pre></td></tr></table></div></figure>


<p>¿Notan la diferencia? Ahora ya tenemos la sensación de que se trata de pestañas, o de opciones, ¿cierto? … Y además, el cursor cambia cuando lo pasamos sobre cualquier parte de nuestra lista! No es una hazaña lograr esto, pero personalmente creo que tiene un efecto súper importante respecto a lo que se puede percibir.</p>

<p>Ahora haremos un poco de magia con la propiedad <code>transition</code> (<em>de la que pueden ver más detalles <strong><a href="https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Using_CSS_transitions">aquí</a></strong></em>) para lograr que, cuando pasemos el mouse sobre cualquiera de las Entradas de nuestra lista (haciendo uso de la propiedad <code>hover</code>), obtengamos el efecto de &lsquo;crecimiento&rsquo; de los bordes de colores mostrados en la presentación del inicio de este post. Para ello, agregamos las siguientes propiedades (que en realidad es una sola, pero cubriendo el aspecto <strong>cross browser</strong> &ndash;<em>compatibilidad inter-exploradores web</em>&ndash;):</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>  ul &gt; li {
</span><span class='line'>    
</span><span class='line'>    ...
</span><span class='line'>    
</span><span class='line'>    -moz-transition: 0.4s all ease-in-out;
</span><span class='line'>    -webkit-transition: 0.4s all ease-in-out;
</span><span class='line'>    -o-transition: 0.4s all ease-in-out;
</span><span class='line'>    transition: 0.4s all ease-in-out;
</span><span class='line'>  }</span></code></pre></td></tr></table></div></figure>


<p>Asignando esta propiedad lograremos que, al definir (más adelante) los cambios que se realizarán cuando el evento <code>hover</code> sea activado, el crecimiento sea gradual y se realice en un intervalo de 0.4 segundos (aun no veremos el efecto causado porque todavía no definimos qué cambios se van a realizar).</p>

<p>Una vez hecho esto, nos queda definir el estado inicial (el que se verá ni bien se cargue la web) así como la &lsquo;animación&rsquo; del evento hover:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>  /* Selector para la Primera Entrada de nuestra lista - Estado Inicial */
</span><span class='line'>  
</span><span class='line'>  ul &gt; li:first-child {    
</span><span class='line'>    border-left: 6px solid #00AE68; /* color y ancho del borde izquierdo */
</span><span class='line'>    border-radius: 0 1em 0 0; /* esquina redondeada */
</span><span class='line'>  }</span></code></pre></td></tr></table></div></figure>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>  /* Selector para la Primera Entrada de nuestra lista - Evento Hover */
</span><span class='line'>  
</span><span class='line'>  ul &gt; li:first-child:hover { border-left: 2.5em solid #00AE68; }</span></code></pre></td></tr></table></div></figure>


<p>Básicamente, establecemos el tamaño inicial (con el color deseado) para el borde de la Entrada; luego, cuando se desencadene el evento hover, hacemos que el <strong><em>&lsquo;tamaño del borde crezca&rsquo;</em></strong> y, debido a que hemos asignado la propiedad <em>transition</em>, el crecimiento no será de golpe, sino que se realizará en un intervalo de tiempo definido.</p>

<p>Para las demás Entradas la figura es bastante similar:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>  ul &gt; li:nth-child(2) { border-left: 6px solid #FF4C00; }
</span><span class='line'>  ul &gt; li:nth-child(2):hover { border-left: 2.5em solid #FF4C00; }
</span><span class='line'>      
</span><span class='line'>  ul &gt; li:nth-child(3) { border-left: 6px solid #FF9400; }
</span><span class='line'>  ul &gt; li:nth-child(3):hover { border-left: 2.5em solid #FF9400; }
</span><span class='line'>      
</span><span class='line'>  ul &gt; li:nth-child(4) { 
</span><span class='line'>    border-left: 6px solid #0B5FA5;
</span><span class='line'>    border-radius: 0 0 1em 0;
</span><span class='line'>  }
</span><span class='line'>  ul &gt; li:nth-child(4):hover { border-left: 2.5em solid #0B5FA5; }
</span></code></pre></td></tr></table></div></figure>


<p>En este punto ya tenemos un menú lateral bastante presentable (dentro de lo sencillo que es), pero si le agregamos una propiedad más veremos que el efecto es bastante significativo:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>  ul &gt; li:hover {
</span><span class='line'>    color: rgba(255,255,255,1);
</span><span class='line'>    text-shadow: 1px 1px 2px white;
</span><span class='line'>  }</span></code></pre></td></tr></table></div></figure>


<p>Con esto lo único que hacemos es que, a parte de la animación asignada, el color del texto de la Entrada sobre la que estamos posando el mouse <em>se resalte</em> un poco y así se diferencie aun más del resto.</p>

<p>Y eso es todo! … Nuestro menú lateral está listo para ser posicionado dentro de nuestra web (obviamente, y como siempre les comento, es sólo una de las tantas posibilidades de personalización que podemos lograr).</p>

<p><em>PD: La fuente usada en este ejemplo es <strong>&lsquo;<a href="http://www.google.com/fonts#UsePlace:use/Collection:Indie+Flower">Indie Flower</a>&rsquo;</strong>.</em></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Cómo crear un simple Logo Animado sólo con CSS]]></title>
    <link href="http://carloscuba.com.pe/blog/2013/07/logo-css-hover/"/>
    <updated>2013-07-07T22:20:00-05:00</updated>
    <id>http://carloscuba.com.pe/blog/2013/07/logo-css-hover</id>
    <content type="html"><![CDATA[<p>Para los <em>amantes del CSS</em> y de los <em>diseños rápidos y simples</em>, hoy les presento esta especie de logo (fácilmente adaptable a sus necesidades) que nació de una idea que encontré mientras hacía mis acostumbrados recorridos por la web.</p>

<iframe 
    class="centeredIframe"
    height="280px" 
    width="60%" 
    frameborder="0" 
    scrolling="no" 
    src="http://carloscuba.com.pe/assets/logo_animado_css.html">
 </iframe>




<!-- more -->


<p>La idea, en general, es la siguiente: Tenemos un <code>div</code> contenedor de nuestro <em>logo</em>. Este div, al cual le hemos asignado la <em>clase &lsquo;container&rsquo;</em> (<code>class='container'</code>) es padre de seis divs adicionales; estos divs son, como se puede observar en el diseño líneas arriba, los seis segmentos horizontales de distinto color cada uno.</p>

<p>Además de los distintos colores, agregamos un poco de sombra (<code>box-shadow</code>) y las esquinas redondeadas (del lado izquierdo -ya que las del derecho aun no están visibles-) del segmento superior e inferior, así como tamaños distintos (<code>width</code>) a cada uno de ellos para lograr el efecto inicial. Hasta aquí, tendremos la mitad del diseño logrado … Una figura no muy concreta a simple vista, verdad? … pues hagamos un poco de magia.</p>

<p>Para empezar, a cada uno de nuestros segmentos deberemos asignarles la <strong>propiedad transition</strong>. Esta propiedad permite que los cambios realizados sobre los elementos afectados, en este caso nuestros segmentos de colores, no tengan efecto inmediato sino que se realicen en un cierto intervalo de tiempo (dentro del cual se va desde el valor A hasta el valor B pasando por todos los valores intermedios -para una mejor y más completa explicación pueden visitar <em><a href="https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Using_CSS_transitions">este link</a></em>&ndash;). Entonces, dentro de nuestra hoja de estilos tendremos algo como esto:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>.a, .b, .c, .d, .e, .f {
</span><span class='line'>  …
</span><span class='line'>  -webkit-transition: all 0.5s ease;
</span><span class='line'>  -moz-transition: all 0.5s ease;
</span><span class='line'>  -o-transition: all 0.5s ease;
</span><span class='line'>  transition: all 0.5s ease;
</span><span class='line'>  ...
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>Con estas líneas nos aseguramos que todo cambio (<code>all</code>) realizado sobre los divs deseados (clases a, b, c, d, e y f) se haga en un intervalo de 0.5 segundos (<code>0.5s</code>) y de manera <em>suave</em> (<code>ease</code>). Hecho esto, nos queda definir bajo qué circunstancias queremos que empiece la animación; recurrimos al efecto <code>hover</code>:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>.container:hover &gt; .a,
</span><span class='line'>.container:hover &gt; .b,
</span><span class='line'>.container:hover &gt; .c,
</span><span class='line'>.container:hover &gt; .d,
</span><span class='line'>.container:hover &gt; .e,
</span><span class='line'>.container:hover &gt; .f {
</span><span class='line'>  width: 300px;
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>Así definimos que, si el usuario hacer pasar el mouse sobre cualquier punto de nuestro div contenedor, el ancho (<code>width</code>) de todos los segmentos de colores va a pasar del tamaño definido anteriormente hasta los 300px (y debido a <em>la propiedad transition</em>, veremos cómo cambian de tamaño en un lapso de 0.5 segundos). Luego de esto, añadimos las esquinas redondeadas (ahora sí las del lado derecho) de los segmentos superior e inferior, y listo! … Ya vemos cómo nuestro diseño <em>se transforma</em> al pasar el mouse sobre él.</p>

<p>Pero … ¿y las letras que aparecen dentro del logo? Podría ser fácilmente otro div con texto dentro del mismo y correctamente posicionado en el centro de nuestro logo, pero no lo es. Es un <strong><a href="http://www.creativasfera.com/aprende-a-usar-los-pseudo-elementos-before-y-after-en-CSS">Pseudo-Elemento</a></strong> de nuestro div contenedor, y tiene asignadas las siguientes propiedades:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>.container:after {
</span><span class='line'>  content: 'sólo CSS';
</span><span class='line'>  font-family: 'Lobster', cursive;
</span><span class='line'>  font-size: 3em;
</span><span class='line'>  text-align: center;
</span><span class='line'>  position: absolute;
</span><span class='line'>  height: 40px;
</span><span class='line'>  width: 300px;
</span><span class='line'>  margin: -90px 0 0 0;
</span><span class='line'>  color: #fbfbfb;
</span><span class='line'>} </span></code></pre></td></tr></table></div></figure>


<p>Aquí no hay más truco que darle al texto (<code>content</code>)<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup> el mismo color del fondo del diseño (<code>color: #fbfbfb</code>) para que no sea visible hasta que se realice la animación.</p>

<p>Y ahora sí está listo! … Hay infinidad de posibilidades para crear nuevos diseños y usar estos sencillos estilos para lograr grandes e interesantes resultados.</p>

<p>Si desean ver sólo el logo, y poder vizualizar el código completo usado, pueden hacer click <strong><a href="http://carloscuba.com.pe/assets/logo_animado_css.html">aquí</a></strong> y utilizar el Inspector Web del navegador que esten usando.</p>
<div class="footnotes">
<hr/>
<ol>
<li id="fn:1">
<p>La fuente usada puede ser encontrada <strong><a href="http://www.google.com/fonts/#QuickUsePlace:quickUse/Family:Lobster">aquí</a></strong>.<a href="#fnref:1" rev="footnote">&#8617;</a></p></li>
</ol>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Cómo agregar un Mapa a mi Página Web]]></title>
    <link href="http://carloscuba.com.pe/blog/2013/06/como-agregar-un-mapa-a-mi-web/"/>
    <updated>2013-06-28T10:16:00-05:00</updated>
    <id>http://carloscuba.com.pe/blog/2013/06/como-agregar-un-mapa-a-mi-web</id>
    <content type="html"><![CDATA[<iframe 
    height="400px" 
    width="100%" 
    frameborder="0" 
    scrolling="no" 
    src="http://carloscuba.com.pe/assets/google_maps.html">
 </iframe>


<p>¿Quién no ha visto este tipo de recurso en alguna página web? Lo cierto es que un <code>Mapa</code> es una herramienta sumamente útil tanto para Usuarios como para <code>Diseñadores / Programadores</code> de <code>Páginas / Aplicaciones Web</code>.</p>

<p>En este post aprenderemos cómo incluir, de manera sencilla, un mapa (soportado <code>Google Maps</code>, por supuesto) en cualquier parte de la página o aplicación web en la que estemos trabajando.</p>

<!-- more -->


<p>Para empezar, debemos entender que nuestro mapa se tendrá que cargar en un contenedor (&ldquo;<code>div</code>&rdquo; &ndash; para ser más exactos), el cual podrá estar en cualquier parte de nuestra página y tendrá las dimensiones que queramos; para este ejemplo se está utilizando una altura de 400 pixels (<code>height:400px;</code>) y todo el ancho posible permitido (<code>width:100%;</code>), por lo que nuestra página inicialmente lucirá más o menos de la siguiente manera:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;!DOCTYPE html&gt;
</span><span class='line'>&lt;html&gt;
</span><span class='line'>  &lt;head&gt;
</span><span class='line'>    &lt;meta name="viewport" content="initial-scale=1.0, user-scalable=no"&gt;
</span><span class='line'>    &lt;meta charset="utf-8"&gt;
</span><span class='line'>    &lt;style&gt;
</span><span class='line'>      #contenedor-mapa {
</span><span class='line'>      background-color:#999;
</span><span class='line'>      margin: 0; padding: 0;
</span><span class='line'>      height: 400px; width:100%;
</span><span class='line'>    }
</span><span class='line'>    &lt;/style&gt;
</span><span class='line'>  &lt;/head&gt;
</span><span class='line'>  &lt;body&gt;
</span><span class='line'>    &lt;div id="contenedor-mapa"&gt;&lt;/div&gt;
</span><span class='line'>  &lt;/body&gt;
</span><span class='line'>&lt;/html&gt;</span></code></pre></td></tr></table></div></figure>


<p>Lo que tenemos hasta aquí, es un contenedor llamado <code>contenedor-mapa</code> que, como es de esperarse, contendrá nuestro mapa. En la cabecera de la página hemos establecido algunos <code>estilos</code> (bastante básicos) para poder observar -si es que cargamos la página tal y como está- que ya tenemos el contenedor creado (de color gris <code>#999</code>) esperando por mostrar las imágenes de Google Maps.</p>

<p>Una vez hecho esto vamos a emplear la magia del <code>JavaScript (JS)</code> para llamar la librería responsable por el completo funcionamiento de nuestro mapa. Para ello, justo después de la etiqueta <code>&lt;/style&gt;</code> agregaremos lo siguiente:</p>

<pre><code>&lt;script src="https://maps.googleapis.com/maps/api/js?v=3.exp&amp;sensor=false"&gt;&lt;/script&gt;
</code></pre>

<p>Con esta línea estamos invocando al <a href="http://es.wikipedia.org/wiki/Interfaz_de_programaci%C3%B3n_de_aplicaciones">API</a> de Google para el uso de los Mapas (<code>Versión 3, por si acaso</code>&ndash; en otro post veremos más a detalle los parámetros de invocación) y quedamos listos para explotar todo su potencial. Justo a continuación, agregamos nuevamente una etiqueta <code>&lt;script&gt;</code> que contendrá los <strong>parámetros de inicio</strong><sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup> del mapa que mostraremos:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;script&gt; 
</span><span class='line'>  var mapa;
</span><span class='line'>  function iniciarMapa() {
</span><span class='line'>    var parametrosInicio = {
</span><span class='line'>      zoom: 12,
</span><span class='line'>      center: new google.maps.LatLng(-8.1119444444444,  -79.028888888889),
</span><span class='line'>      mapTypeId: google.maps.MapTypeId.ROADMAP
</span><span class='line'>    };
</span><span class='line'>  mapa = new google.maps.Map(document.getElementById('contenedor-mapa'), parametrosInicio);
</span><span class='line'>  }
</span><span class='line'>  google.maps.event.addDomListener(window, 'load', iniciarMapa);
</span><span class='line'>&lt;/script&gt;</span></code></pre></td></tr></table></div></figure>


<p> Lo que estamos haciendo aquí es lo siguiente:</p>

<ul>
<li><p>Creamos una variable <code>mapa</code>, la cual contendrá todas las opciones que nos permitirán manejar la visualización y la funcioncionalidad del mapa que mostraremos.</p></li>
<li><p>Creamos una función <code>iniciarMapa()</code>:</p>

<ul>
<li><p>Esta ejecutará una vez que la página este lista para cargarse; dentro de esta función definimos nuestra variable <code>parametrosInicio</code>, que incluirá las siguientes <em>opciones básicas (requeridas)</em>:</p>

<ul>
<li><p> <code>zoom</code>: El nivel inicial de Zoom que presentará el mapa.</p></li>
<li><p><code>center</code>: El Punto Central que se mostrará en el mapa. Este punto está dado por una variable de tipo <a href="https://developers.google.com/maps/documentation/javascript/reference?hl=es#LatLng"><strong>LatLng</strong></a> definido por el propio Google para establecer las <strong><a href="https://support.google.com/maps/answer/2533464?hl=es">coordenadas</a> centrales iniciales</strong> de acuerdo a las cuales mostraremos nuestro mapa. (Para obtener las coordendas de cualquier punto en <code>nuestro planeta</code>, podemos utilizar <a href="http://www.agenciacreativa.net/coordenadas_google_maps.php">esta simple web</a>). En esta variable, el primer parámetro es la Latitud y el siguiente la Longitud del punto deseado.</p></li>
<li><p><code>mapTypeId</code>: El Tipo de Mapa que deseamos mostrar inicialmente (puede ser ROADMAP, HYBRID, SATELLITE, TERRAIN). Pueden encontrar una definición más amplia de cada tipo de mapa <a href="https://developers.google.com/maps/documentation/javascript/maptypes?hl=es">aquí</a>.</p></li>
</ul>
</li>
<li><p>Lo siguiente es asignar a nuestra variable <code>mapa</code> el objeto definido por el tipo de variable <a href="https://developers.google.com/maps/documentation/javascript/reference?hl=es#Map">google.maps.Map</a>, al cual le pasamos como parámetros el contenedor (<code>div</code> -ya que dentro de este mostraremos el mapa-) que creamos inicialmente en nuestra web, así como la variable <code>parametrosInicio</code>.</p></li>
</ul>
</li>
<li><p>Una vez hecho esto, agregaremos la llamada a nuestra función <code>iniciarMapa</code> agregando como trigger el evento <strong>&lsquo;load&rsquo;</strong> al DOM de nuestra página (para simplificar las cosas: <strong>cuando nuestra página este lista para ser mostrada -ya cargada- se ejecutará la función indicada</strong>).</p></li>
</ul>


<p>Y listo !!! … Podemos empezar a personalizar nuestro mapa para mostar los lugares que queramos, empleando el tipo de mapa que deseemos y con el zoom que nosotros elijamos.</p>

<p><em>PD: En un próximo post veremos cómo agregar <code>marcadores</code> a nuestro mapa, de tal forma que podamos mostrar uno o varios lugares específicos y con la posibilidad de generar un poco más de interactividad entre el usuario y nuestra web.</em></p>

<br><br/>

<div class="footnotes">
<hr/>
<ol>
<li id="fn:1">
<p>La documentación completa sobre los parámetros de inicio se haya <a href="https://developers.google.com/maps/documentation/javascript/reference?hl=es#MapOptions">aquí.</a><a href="#fnref:1" rev="footnote">&#8617;</a></p></li>
</ol>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Selector de Navegador para CSS]]></title>
    <link href="http://carloscuba.com.pe/blog/2013/06/css-browser-selector/"/>
    <updated>2013-06-23T14:02:00-05:00</updated>
    <id>http://carloscuba.com.pe/blog/2013/06/css-browser-selector</id>
    <content type="html"><![CDATA[<p>Mientras trataba de arreglar algunos detalles de mi recientemente creado y humilde blog, me encontré con esta herramienta súper útil.</p>

<blockquote><p>¿ Qué Programador / Diseñador Web no ha sufrido alguna vez una de esas malas pasadas de los <a href="http://coding.smashingmagazine.com/2010/06/07/the-principles-of-cross-browser-css-coding/">Cross-Browser</a> CSS ?</p></blockquote>

<p>Pues bien, hoy les presento <code>CSS Browser Selector</code><sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup>. Este pequeño <code>.js</code> nos va a sacar de apuros más de una vez en caso queramos aplicar <em>estilos definidos para cada navegador</em>, dependiendo del que este usando el usuario; incluso brinda la posibilidad de <strong>identificar el sistema operativo</strong> desde el que se está ejecutando el mismo, lo que nos permite asignar diferentes estilos según el navegador usado (<em>por cuestiones de compatibilidad, tal vez</em>) o, yendo un poco más allá, según el sistema operativo detectado.</p>

<!-- more -->


<p><img src="https://lh5.googleusercontent.com/-PXp6Yj0_Gbc/Uciw-jPWuAI/AAAAAAAAAE0/M8woHz0ZL98/s800/browsers-css.jpg" alt="CSS Cross Browser" /></p>

<p>Su implementación es bastante sencilla: Primero debemos agregar la llamada al archivo desde la cabecera de nuestra <code>página HTML</code>; para ello, copiamos esta línea dentro de las etiquetas <code>&lt;head&gt;</code> y <code>&lt;/head&gt;</code>:</p>

<pre><code>&lt;script src="ruta_del_archivo/css_browser_selector.js" type="text/javascript"&gt;  &lt;/script&gt;
</code></pre>

<p>Una vez hecho esto, sólo debemos empezar a usarla en nuestro diseño! … En mi caso, estoy usando este selector para aplicar una <strong>&ldquo;animación&rdquo;</strong> a los Links Sociales que se encuentran justo debajo de mi nombre.</p>

<p>Si estás usando Chrome, podrás darte cuenta que si pasas el mouse sobre alguno de los íconos mencionados <code>( evento :hover)</code> aparece un pequeño círculo al rededor del mismo. Esto se logra de la siguiente manera:</p>

<pre><code>.chrome #social-links li : hover {
    …
    CSS que se desea aplicar
    …
}
</code></pre>

<p><code>#social-links</code> es el <em>ID</em> del contenedor de los íconos, por lo que cada etiqueta <code>&lt;li&gt;</code> dentro del mismo (<em>donde están distribuidos los íconos</em>) sufrirá los cambios que se hayan establecido dentro de las llaves <code>{ }</code>.</p>

<p>Ahora, la parte interesante (y donde radica la parte central de esta herramienta) está en que, <strong>sin necesidad de definir clases adicionales dentro de nuestras etiquetas</strong> (en HTML), CSS Browser Selector gestiona automáticamente el uso de dichos estilos sólo para el navegador establecido (en este caso <code>Chrome</code>) o, en caso se haya definido, algún Sistema Operativo en especial.</p>

<p>Dicho esto, la sintaxis general sería la siguiente:</p>

<pre><code>.[Código_de_OS].[Código_de_Navegador] [Selector] { 
    ...
} 

-&gt; Sin espacio entre los Códigos de OS y Navegador
</code></pre>

<p>Y listo! … Podemos empezar a customizar nuestros diseños según navegadores y sistemas operativos!</p>

<p>El link de descarga de, así como la documentación completa de este pequeño y efectivo .js, con ejemplos de aplicación y con la <strong><em>lista de Códigos de Navegadores y Sistemas Operativos disponibles</em></strong>, se encuentra en su <a href="http://rafael.adm.br/css_browser_selector/">web oficial</a>.</p>

<p>No es lo último en aplicación de tecnología (ni la más actualizada tampoco) pero me pareció súper útil y además fácil de implementar, así que con esto me despido.</p>

<p>Hasta pronto!</p>

<br></br>



<div class="footnotes">
<hr/>
<ol>
<li id="fn:1">
<p>Documentación Oficial y guía de implementación <a href="http://rafael.adm.br/css_browser_selector/">aquí</a><a href="#fnref:1" rev="footnote">&#8617;</a></p></li>
</ol>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Primer Post!]]></title>
    <link href="http://carloscuba.com.pe/blog/2013/06/primer-post/"/>
    <updated>2013-06-20T01:33:00-05:00</updated>
    <id>http://carloscuba.com.pe/blog/2013/06/primer-post</id>
    <content type="html"><![CDATA[<p>Bienvenidos sean !!! … Hace unos días me encontré con una serie de páginas, videos y enlaces que me guiaban a un solo lugar: <a href="http://octopress.org" title="A blogging framework for hackers">Octopress</a>. Y desde ese momento, hasta hace unos minutos, que estuve reventándome las neuronas para poder publicar finalmente algo; el proceso no ha sido muy fácil, pero una vez que ya está <code>todo seteado</code> la experiencia de bloggear cambia por completo.</p>

<!-- more -->


<p>Muy pronto les tendré algunos post con <code>Tutoriales</code>, <code>Guías paso a paso</code>, <code>Noticias sobre Tecnología</code>, <code>Geek Stuff</code><sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup> y mucho más! …</p>

<p>Espero que este blog sea el punto de partida para contactarme con muchas otras personas que compartan mis intereses, que me puedan dar ideas para nuevos posts y que me puedan enseñar más día tras día. <em>See you soon!</em></p>

<br></br>



<div class="footnotes">
<hr/>
<ol>
<li id="fn:1">
<p><em>Sí, esas cositas interesantes que tanto nos interesan a algunos.</em><a href="#fnref:1" rev="footnote">&#8617;</a></p></li>
</ol>
</div>

]]></content>
  </entry>
  
</feed>
